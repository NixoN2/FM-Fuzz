name: CVC5 Commit Fuzzer

on:
  workflow_dispatch:

jobs:
  commit-fuzzer:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      
      - name: Install LLVM/Clang 17
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: '17'

      - name: Add LLVM to PATH
        run: echo "${{ env.LLVM_PATH }}/bin" >> $GITHUB_PATH

      - name: Export LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=${{ env.LLVM_PATH }}/lib" >> $GITHUB_ENV

      - name: Install system development packages
        run: |
          echo "Installing essential development packages..."
          sudo apt-get update
          
          # Install ONLY GCC 14 and essential packages (remove conflicting versions)
          sudo apt-get install -y \
            build-essential \
            libc6-dev \
            gcc \
            g++ \
            binutils \
            libstdc++-14-dev \
            libc++-dev \
            libc++abi-dev \
            zlib1g \
            zlib1g-dev
          
          echo "Installation completed"
      
      - name: Install Python dependencies
        run: |
          pip install gitpython unidiff "libclang==17.0.6"

      - name: Build cvc5 with coverage
        run: |
          # Set environment variables to ensure clang uses GCC 14 toolchain
          export CXX="clang++ --gcc-toolchain=/usr"
          export CC="clang --gcc-toolchain=/usr"
          ./scripts/cvc5/build.sh --coverage
      
      - name: Download coverage map
        uses: dawidd6/action-download-artifact@v3
        with:
          name: coverage-mapping
          path: .
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: cvc5-coverage-analysis.yml
      
      - name: Extract coverage map
        run: |
          gunzip coverage_mapping.json.gz
          ls -la coverage_mapping.json

      - name: Run Commit Fuzzer
        working-directory: cvc5
        run: ${{ github.workspace }}/scripts/cvc5/commit_fuzzer/run_commit_fuzzer.sh 50 ${{ github.workspace }}/scripts/cvc5/commit_fuzzer/commit_fuzzer.py ../coverage_mapping.json build
     